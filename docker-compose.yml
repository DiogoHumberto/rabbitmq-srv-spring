version: "3.6"

services:
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        #restart: always
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ./dados:/var/lib/rabbitmq/
            - ./dados:/var/log/rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=admin
        healthcheck:
          test: ["CMD", "rabbitmqctl", "status"]
          interval: 10s
          timeout: 5s
          retries: 3

    postgres:
        image: postgres:latest
        container_name: postgres
        environment:
          POSTGRES_DB: bco_pgto
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: docker
        ports:
          - "5432:5432"        
        volumes:
          - postgres_data:/var/lib/postgresql/data   
        healthcheck:
          test: ["CMD-SHELL", "PGUSER=docker PGPASSWORD=docker pg_isready -d bco_pgto"]
          interval: 30s
          timeout: 15s
          retries: 3
          #start_period: 80s

    srv-pagamento:
        build:
          context: ./srv-pagamento
        env_file: ./env/app.env
        ports:
          - "8080:8080" 
        restart: unless-stopped
        depends_on:
          postgres:
            condition: service_healthy
          rabbitmq:
            condition: service_healthy

    srv-entrega:
        build:
          context: ./srv-entrega
        env_file: ./env/app.env
        #restart: unless-stopped
        depends_on:
          #postgres:
            #condition: service_healthy
          rabbitmq:
            condition: service_healthy  

    srv-pedido:
        build:
          context: ./srv-pedido
        env_file: ./env/app.env
        #restart: unless-stopped
        depends_on:
          #postgres:
            #condition: service_healthy
          rabbitmq:
            condition: service_healthy

volumes:
  postgres_data:

    